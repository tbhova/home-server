version: '3.8'

services:
  # https://docs.traefik.io
  traefik:
    # The official v2 Traefik docker image
    image: "traefik:chevrotin"
    container_name: "traefik"
    restart: always
    environment:
      # https://docs.traefik.io/https/acme/#providers
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_KEY}
      - TZ=$TZ
      - PUID=$PUID
      - PGID=$PGID
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - "--api.dashboard=true" # <== Enabling the dashboard to view services, middlewares, routers, etc...
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - "--log.level=DEBUG" # TODO disable INFO
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - "--providers.docker=true" # <== Enabling docker as the provider for traefik
      - "--providers.docker.exposedbydefault=false" # <== Don't expose every container to traefik, only expose enabled ones
      - "--providers.docker.network=t2_proxy"
      - "--providers.file=true" # Enable file provider for services hosted outside of docker compose.
      - "--providers.file.watch=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml" # <== Referring to a dynamic configuration file
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      # https://docs.traefik.io/migration/v1-to-v2/#http-to-https-redirection-is-now-configured-on-routers
      - "--entrypoints.web.address=:80"  # HTTP
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"    # HTTPS
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      ## Certificate Settings (DNS Challenge w/ Cloudflare) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - "--certificatesresolvers.dns-cloudflare.acme.email=$EMAIL"
      - "--certificatesresolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge=true"
      # Commented out because: https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Forcing_the_Use_of_Wildcard_Certs
      # - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53, 1.0.0.1:53"
      ## Global settings
      - "--global.sendAnonymousUsage" # <== Send anonymous usage data https://docs.traefik.io/contributing/data-collection/
      
     # networks:
     #   t2_proxy:
     #    ipv4_address: 192.168.90.254 # You can specify a static IP
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:80"  # <== http
      - "8443:443"  # <== https
    volumes:
      - "./traefik:/etc/traefik:ro" # <== Traefik looks for config at /etc/traefik/traefik.yaml https://docs.traefik.io/getting-started/configuration-overview/#configuration-file
      - "letsencrypt:/letsencrypt" # <== Volume for certs (TLS)
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # <== So that Traefik can listen to the Docker events.
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container. ####     
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.entryPoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certResolver=dns-cloudflare"
      - "traefik.http.routers.traefik-secure.middlewares=chain-oauth@file"
      
      #- "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      #- "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/shared/.htpasswd"

  # Google OAuth - Single Sign On using OAuth 2.0
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Setting_Up_OAuth_Forwarder_Container
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/#Step_3a_Add_Traefik_OAuth_Container
  oauth:
    image: thomseddon/traefik-forward-auth:latest
    container_name: oauth
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      - TZ=$TZ
      - PROVIDERS_GOOGLE_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
      - PROVIDERS_GOOGLE_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
      - SECRET=${OAUTH_SECRET}
      - COOKIE_DOMAIN=${DOMAINNAME}
      - INSECURE_COOKIE="false"
      - AUTH_HOST=oauth.${DOMAINNAME}
      - URL_PATH=/_oauth
      - WHITELIST=$EMAILS
      - LOG_LEVEL=info
      - LOG_FORMAT=text
      - LIFETIME=2592000 # 30 days
    labels:
      - "traefik.enable=true" 
     ## HTTP Routers
      - "traefik.http.routers.oauth-secure.entrypoints=websecure"
      - "traefik.http.routers.oauth-secure.rule=Host(`oauth.${DOMAINNAME}`)"
      - "traefik.http.routers.oauth-secure.tls=true"
      ## HTTP Services
      - "traefik.http.routers.oauth-secure.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
      ## Middlewares
      - "traefik.http.routers.oauth-secure.middlewares=chain-oauth@file"


  # https://github.com/oznu/docker-cloudflare-ddns
  cloudflare-ddns:
    image: oznu/cloudflare-ddns
    container_name: "cloudflare-ddns"
    restart: always
    environment:
      - TZ=$TZ
      - API_KEY=${CLOUDFLARE_API_KEY}
      - ZONE=${DOMAINNAME}
      - PROXIED=false
      
  # Portainer - WebUI for Containers
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Portainer_with_Traefik_2_and_OAuth
  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    restart: always
    command: -H unix:///var/run/docker.sock
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
     # ports:
     # - "$PORTAINER_PORT:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/user/appdata/docker/portainer/data:/data 
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.${DOMAINNAME}`)"
      - "traefik.http.routers.portainer-secure.tls=true"
      ## Middlewares
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.portainer-secure.middlewares=chain-oauth@file" # Google OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.portainer-secure.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
      
  # Organizr - Unified frontent with a directory for all ports and services
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Organizr_-_Unified_HTPCHome_Server_Web_Interface
  organizr:
     container_name: organizr
     image: organizrtools/organizr-v2:latest
     restart: always
     networks:
       - t2_proxy
     security_opt:
       - no-new-privileges:true
    # ports:
    #  - "$ORGANIZR_PORT:80"
     volumes:
       - /mnt/user/appdata/docker/organizr:/config
     environment:
       - PUID=$PUID
       - PGID=$PGID
       - TZ=$TZ
     labels:
       - "traefik.enable=true"
       ## HTTP Routers
       - "traefik.http.routers.organizr-secure.entrypoints=websecure"
       - "traefik.http.routers.organizr-secure.rule=Host(`${DOMAINNAME}`,`www.${DOMAINNAME}`)" 
       - "traefik.http.routers.organizr-secure.tls=true"
       ## Middlewares
       - "traefik.http.routers.organizr-rtr.middlewares=chain-oauth@file" 
       ## HTTP Services
       - "traefik.http.routers.organizr-secure.service=organizr-svc"
       - "traefik.http.services.organizr-svc.loadbalancer.server.port=80"
      
  # MariaDB - MySQL Database
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#MariaDB_-_MySQL_Database
  mariadb:
     container_name: mariadb
     image: linuxserver/mariadb:latest
     restart: always
     networks:
       t2_proxy:
         ipv4_address: 192.168.90.250 
     security_opt:
       - no-new-privileges:true
     ports:
       - "3306:3306"
     volumes:
       - /mnt/user/appdata/docker/mariadb/data:/config
       - /etc/timezone:/etc/timezone:ro
       - /etc/localtime:/etc/localtime:ro
     environment:
       - PUID=$PUID
       - PGID=$PGID
       - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD

  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser 
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Guacamole_-_HTML_5_based_Remote_desktop_SSH_on_Telnet_Gateway
  # TODO DB setup
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    #ports:
    #  - "$GUACAMOLE_PORT:8080"
    environment:
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: 192.168.90.250 
      MYSQL_PORT: 3306
      MYSQL_DATABASE: guacamole
      MYSQL_USER: $GUAC_MYSQL_USER
      MYSQL_PASSWORD: $GUAC_MYSQL_PASSWORD #TODO
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-secure.entrypoints=websecure"
      - "traefik.http.routers.guacamole-secure.rule=Host(`guac.${DOMAINNAME}`)"
      - "traefik.http.routers.guacamole-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.guacamole-secure.middlewares=chain-oauth@file,add-guacamole" 
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      ## HTTP Services
      - "traefik.http.routers.guacamole-secure.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

  # Guacamole Daemon - Needed for Guacamole
  guacd:
    image: guacamole/guacd
    container_name: guacd
    restart: always
    security_opt:
      - no-new-privileges:true

  # https://github.com/plexinc/pms-docker/blob/master/docker-compose-bridge.yml.template
  plex:
    image: plexinc/pms-docker:public
    container_name: plex
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports: # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
     - 32400:32400/tcp # Primary
     #- 3005:3005/tcp # Plex Home Theater Companion
     #- 8324:8324/tcp # Plex Roku Companion
     - 32469:32469/tcp # Plex DLNA Server
     - 1900:1900/udp # Plex DLNA Server
     - 32410:32410/udp # GDM network discovery
     - 32412:32412/udp # GDM network discovery
     - 32413:32413/udp # GDM network discovery
     - 32414:32414/udp # GDM network discovery
    environment:
      - TZ=$TZ
      - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
      - ADVERTISE_IP=http://192.168.1.100:32400/ # plex.${DOMAINNAME}
    hostname: "PlexServer"
    volumes:
      - /mnt/user/appdata/docker/plex_config:/config
      - /mnt/user/appdata/docker/plex_tmp:/transcode
      - /mnt/user/media:/data
    labels:
      - "traefik.enable=true" 
      ## Routers
      - "traefik.http.routers.plex-secure.rule=Host(`plex.${DOMAINNAME}`)"
      - "traefik.http.routers.plex-secure.entryPoints=websecure"
      - "traefik.http.routers.plex-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.plex-secure.middlewares=chain-no-auth@file"
      ## Services
      - "traefik.http.routers.plexms-rtr.service=plexms-svc"
      - "traefik.http.services.plexms-svc.loadbalancer.server.port=32400"

  # https://github.com/shawly/docker-ps3netsrv
  ps3netsrv:
    image: shawly/ps3netsrv
    container_name: ps3netsrv
    environment:
      - TZ=$TZ
      - USER_ID=$PUID
      - GROUP_ID=$PGID
    ports:
      - "38008:38008"
    volumes:
      - "/mnt/user/games/PS3Games:/games:rw"
      
volumes:
  letsencrypt:
    # Intentionally blank. Traefik will add an acme.json certificate inside this volume.
    # We are not using a file in the shared vagrant directory because all files in the vagrant share have 777 permissions and letsencrypt/Traefik require 600.

networks:
  # Traefik 2 proxy.
  t2_proxy:
    name: t2_proxy
    ipam:
      config:
       - subnet: 192.168.90.0/24
       # gateway is only honored for v2 (for now): https://github.com/docker/compose/issues/6569 and https://docs.docker.com/compose/compose-file/#ipam
       #gateway: 192.168.90.1
