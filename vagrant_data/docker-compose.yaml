version: '3.1'

services:
  # https://docs.traefik.io
  traefik:
    # The official v2 Traefik docker image
    image: "traefik:v2.1"
    container_name: "traefik"
    restart: always
    environment:
      # https://docs.traefik.io/https/acme/#providers
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_KEY}
      - TZ=America/Los_Angeles
      - PUID=1000
      - PGID=1000
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - "--api.dashboard=true" # <== Enabling the dashboard to view services, middlewares, routers, etc...
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - "--log.level=DEBUG" # TODO disable INFO
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - "--providers.docker=true" # <== Enabling docker as the provider for traefik
      - "--providers.docker.exposedbydefault=false" # <== Don't expose every container to traefik, only expose enabled ones
      - "--providers.file=true" # Enable file provider for services hosted outside of docker compose.
      - "--providers.file.watch=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml" # <== Referring to a dynamic configuration file
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - "--entrypoints.websecure.address=:443"    # HTTPS
      ## Certificate Settings (DNS Challenge w/ Cloudflare) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - "--certificatesresolvers.dns-cloudflare.acme.email=tbhovanec@gmail.com"
      - "--certificatesresolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge=true"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53, 1.0.0.1:53"
      ## Global settings
      - "--global.sendAnonymousUsage" # <== Send anonymous usage data https://docs.traefik.io/contributing/data-collection/
    ports:
      - "8443:443"  # <== https
    volumes:
      - "./traefik:/etc/traefik:ro" # <== Traefik looks for config at /etc/traefik/traefik.yaml https://docs.traefik.io/getting-started/configuration-overview/#configuration-file
      - "letsencrypt:/letsencrypt" # <== Volume for certs (TLS)
      - "/var/run/docker.sock:/var/run/docker.sock:ro" # <== So that Traefik can listen to the Docker events.
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container. ####     
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.tylerhovanec.com`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.entryPoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certResolver=dns-cloudflare"
      #- "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      #- "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/shared/.htpasswd"
       
      # TODO get plex working or move to docker.
      #- "traefik.http.routers.plex-secure.rule=Host(`plex.tylerhovanec.com`)"
      #- "traefik.http.routers.plex-secure.service=plex"
      #- "traefik.http.routers.plex-secure.entryPoints=websecure"
      #- "traefik.http.routers.plex-secure.tls=true"
      #- "traefik.http.routers.plex-secure.tls.certresolver=dns-cloudflare"
      ##- "traefik.http.services.plex.loadbalancer.server.port=32400"
      ##- "traefik.http.services.plex.loadbalancer.server.url=http://127.0.0.1:32400"
      #- "traefik.http.services.plex.loadbalancer.server.url=https://192.168.1.100:32400"
      
  # https://github.com/oznu/docker-cloudflare-ddns
  cloudflare-ddns:
    image: oznu/cloudflare-ddns
    container_name: "cloudflare-ddns"
    restart: always
    environment:
      - TZ=America/Los_Angeles
      - API_KEY=${CLOUDFLARE_API_KEY}
      - ZONE=tylerhovanec.com
      - PROXIED=false
      
  # https://github.com/plexinc/pms-docker/blob/master/docker-compose-bridge.yml.template
  plex:
    image: plexinc/pms-docker
    container_name: plex
    restart: always
    ports: # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
     - 32400:32400/tcp # Primary
      #- 3005:3005/tcp # Plex Home Theater Companion
      #- 8324:8324/tcp# Plex Roku Companion
     - 32469:32469/tcp # Plex DLNA Server
     - 1900:1900/udp # Plex DLNA Server
     - 32410:32410/udp # GDM network discovery
     - 32412:32412/udp # GDM network discovery
     - 32413:32413/udp # GDM network discovery
     - 32414:32414/udp # GDM network discovery
    environment:
      - TZ=America/Los_Angeles
      - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
      - ADVERTISE_IP=http://192.168.1.100:32400/
    hostname: <hostname>
    volumes:
      - /mnt/user/appdata/plex_config:/config
      #- /data:/data
      
volumes:
  letsencrypt:
    # Intentionally blank. Traefik will add an acme.json certificate inside this volume.
    # We are not using a file in the shared vagrant directory because all files in the vagrant share have 777 permissions and letsencrypt/Traefik require 600.
