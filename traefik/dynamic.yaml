# Most services should use Docker labels. Non docker services can go in here. See: https://community.containo.us/t/expose-a-docker-container-without-labels/1907/9

# log:
#   level: DEBUG

http:
  routers:
    # Define a connection between requests and services
    homeassistant-secure:
      rule: "Host(`home.tylerhovanec.com`)"
      entryPoints:
        - "websecure"
      service: homeassistant # refers to the http.services.homeassistant entry
      tls:
        certResolver: dns-cloudflare
      middlewares:
        - chain-no-auth
    transmission-secure:
      rule: "Host(`transmission.tylerhovanec.com`)"
      entryPoints:
        - "websecure"
      service: transmission # refers to the http.services.transmission entry
      tls:
        certResolver: dns-cloudflare
      middlewares:
        - chain-oauth

  middlewares:
    # https://docs.traefik.io/middlewares/ratelimit/
    rate-limit:
      rateLimit:
        average: 100 # QPS
        burst: 50 # Additional burst QPS
    # https://docs.traefik.io/middlewares/headers/
    # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Security_Headers_as_Middlewares_File
    secure-headers: 
      headers:
        accessControlAllowMethods:
         - "GET"
         - "OPTIONS"
         - "PUT"
        accessControlMaxAge: 100
        hostsProxyHeaders:
         - "X-Forwarded-Host"
        stsSeconds: 63072000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        # frameDeny = true #overwritten by customFrameOptionsValue
        #customFrameOptionsValue: "allow-from https:tylerhovanec.com" #CSP takes care of this but may be needed for organizr. 
        contentTypeNosniff: true 
        browserXssFilter: true 
        # Can only be used if the middleware is declared in docker labels instead of a file.
        # sslForceHost = true # add sslHost to all of the services
        # sslHost = "example.com"
        referrerPolicy: "same-origin" 
        # Setting contentSecurityPolicy is more secure but it can break things. Proper auth will reduce the risk.
        # the below line also breaks some apps due to 'none' - sonarr, radarr, etc.
        # contentSecurityPolicy = "frame-ancestors '*.example.com:*';object-src 'none';script-src 'none';"
        # The Studio Code Server element of Home Assistant doesn't work without unsafe-inline. I figured this out from the
        # Chrome developer console - the error was unintellible, but it did say that unsafe-inline wasn't enabled.
        # Similarly, Plex doesn't work without unsafe-eval.
        # TODO: hova - It might make sense to figure out a solution without the word unsafe in it.
        contentSecurityPolicy: "script-src 'self' 'unsafe-inline' 'unsafe-eval'"
        permissionsPolicy: "camera=(), geolocation=(), microphone=(), payment=(), usb=(), vr=()," 
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex,"
          server: ""
    oauth:
      forwardAuth:
        address: "http://oauth:4181" # Make sure you have the OAuth service in docker-compose.yml
        trustForwardHeader: true
        authResponseHeaders: "X-Forwarded-User"
    # https://docs.traefik.io/middlewares/chain/
    # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Security_Headers_as_Middlewares_File
    # No auth for services like Plex.
    chain-no-auth:
      chain:
        middlewares:
         - "rate-limit"
         - "secure-headers"
     # Auth for other services
    chain-oauth:
      chain:
        middlewares:
         - "rate-limit"
         - "secure-headers"
         - "oauth"

  services:
  # Define how to reach an existing service outside of docker
    homeassistant:
      loadBalancer:
        servers:
        - url: "http://192.168.2.252:8123/"
    transmission:
      loadBalancer:
        servers:
        - url: "http://192.168.2.253:9091/"
