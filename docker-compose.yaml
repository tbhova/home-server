version: '3.8'

services:

  ################################ Docker and backbone services

  # Traefik 2 - Reverse Proxy
  # https://docs.traefik.io
  # https://www.smarthomebeginner.com/my-smart-home-setup-2019/
  traefik:
    # The official v2 Traefik docker image
    image: "traefik:chevrotin"
    container_name: "traefik"
    restart: always
    environment:
      # https://docs.traefik.io/https/acme/#providers
      CF_DNS_API_TOKEN: ${CLOUDFLARE_API_KEY}
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - "--api.dashboard=true" # <== Enabling the dashboard to view services, middlewares, routers, etc...
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      #- "--log.level=DEBUG"
      - "--log.level=INFO"
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - "--providers.docker=true" # <== Enabling docker as the provider for traefik
      - "--providers.docker.endpoint=tcp://socket-proxy:2375"  # Use docker socket proxy for better security.
      - "--providers.docker.exposedbydefault=false" # <== Don't expose every container to traefik, only expose enabled ones
      - "--providers.docker.network=t2_proxy"
      - "--providers.file=true" # Enable file provider for services hosted outside of docker compose.
      - "--providers.file.watch=true"
      - "--providers.file.filename=/etc/traefik/dynamic.yaml" # <== Referring to a dynamic configuration file
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      # https://docs.traefik.io/migration/v1-to-v2/#http-to-https-redirection-is-now-configured-on-routers
      - "--entrypoints.web.address=:80"  # HTTP
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"    # HTTPS
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/12,172.64.0.0/13,131.0.72.0/22
      ## Certificate Settings (DNS Challenge w/ Cloudflare) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - "--certificatesresolvers.dns-cloudflare.acme.email=$EMAIL"
      - "--certificatesresolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge=true"
      # Commented out because: https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Forcing_the_Use_of_Wildcard_Certs
      # - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.dns-cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53, 1.0.0.1:53"
      ## Global settings
      - "--global.sendAnonymousUsage" # <== Send anonymous usage data https://docs.traefik.io/contributing/data-collection/
      
     # networks:
     #   t2_proxy:
     #    ipv4_address: 192.168.90.254 # You can specify a static IP
    networks:
      - t2_proxy
      - socket_proxy
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "8080:80"  # <== http
      - "8443:443"  # <== https
    volumes:
      - "./traefik:/etc/traefik:ro" # <== Traefik looks for config at /etc/traefik/traefik.yaml https://docs.traefik.io/getting-started/configuration-overview/#configuration-file
      - "letsencrypt:/letsencrypt" # <== Volume for certs (TLS)
      # - "/var/run/docker.sock:/var/run/docker.sock:ro" # <== So that Traefik can listen to the Docker events. # Use docker socket proxy for better security.
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container. ####     
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.traefik-secure.rule=Host(`traefik.${DOMAINNAME}`)"
      - "traefik.http.routers.traefik-secure.service=api@internal"
      - "traefik.http.routers.traefik-secure.entryPoints=websecure"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certResolver=dns-cloudflare"
      - "traefik.http.routers.traefik-secure.middlewares=chain-oauth@file"
      
      #- "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      #- "traefik.http.middlewares.traefik-auth.basicauth.usersfile=/shared/.htpasswd"

  # Google OAuth - Single Sign On using OAuth 2.0
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Setting_Up_OAuth_Forwarder_Container
  # https://www.smarthomebeginner.com/google-oauth-with-traefik-docker/#Step_3a_Add_Traefik_OAuth_Container
  oauth:
    image: thomseddon/traefik-forward-auth:latest
    container_name: oauth
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      PROVIDERS_GOOGLE_CLIENT_ID: ${GOOGLE_OAUTH_CLIENT_ID}
      PROVIDERS_GOOGLE_CLIENT_SECRET: ${GOOGLE_OAUTH_CLIENT_SECRET}
      SECRET: ${OAUTH_SECRET}
      COOKIE_DOMAIN: ${DOMAINNAME}
      INSECURE_COOKIE: "false"
      AUTH_HOST: oauth.${DOMAINNAME}
      URL_PATH: /_oauth
      WHITELIST: $EMAILS
      LOG_LEVEL: info
      LOG_FORMAT: text
      LIFETIME: 2592000 # 30 days
    labels:
      - "traefik.enable=true" 
     ## HTTP Routers
      - "traefik.http.routers.oauth-secure.entrypoints=websecure"
      - "traefik.http.routers.oauth-secure.rule=Host(`oauth.${DOMAINNAME}`)"
      - "traefik.http.routers.oauth-secure.tls=true"
      ## HTTP Services
      - "traefik.http.routers.oauth-secure.service=oauth-svc"
      - "traefik.http.services.oauth-svc.loadbalancer.server.port=4181"
      ## Middlewares
      - "traefik.http.routers.oauth-secure.middlewares=chain-oauth@file"


  # https://github.com/oznu/docker-cloudflare-ddns
  cloudflare-ddns:
    image: oznu/cloudflare-ddns
    container_name: "cloudflare-ddns"
    restart: always
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      API_KEY: ${CLOUDFLARE_API_KEY}
      ZONE: ${DOMAINNAME}
      PROXIED: "true"

  # https://www.smarthomebeginner.com/traefik-docker-security-best-practices/#9_Use_a_Docker_Socket_Proxy  
  # Docker Socket Proxy - Security Enchanced Proxy for Docker Socket
  socket-proxy:
    container_name: socket-proxy
    image: tecnativa/docker-socket-proxy
    restart: always
    networks:
      # t2_proxy:
      socket_proxy:
        ipv4_address: 192.168.91.254 # You can specify a static IP
    privileged: true
    # ports:
    #  - "2375:2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      LOG_LEVEL: info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      EVENTS: 1
      PING: 1
      VERSION: 1
      ## Revoked by Default
      # Security critical
      AUTH: 0
      SECRETS: 0
      POST: 1 # Watchtower
      # Not always needed
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1 # Traefik, portainer, etc.
      DISTRIBUTION: 0
      EXEC: 0
      IMAGES: 1 # Portainer
      INFO: 1 # Portainer
      NETWORKS: 1 # Portainer
      NODES: 0
      PLUGINS: 0
      SERVICES: 1 # Portainer
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1 # Portaienr
      VOLUMES: 1 # Portainer
  
  # Watchtower - Automatic Docker Container Updates
  # Ouroboros is no longer maintained.
  # https://github.com/containrrr/watchtower
  # https://codeopolis.com/posts/use-watchtower-to-automate-docker-container-updates/
  # Set label com.centurylinklabs.watchtower.enable set to false to disable update checking for each container.
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    networks:
      - default
      - socket_proxy
    # depends_on:
    #  - socket-proxy
    # volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
      # Docker's config.json
      #- /home/<user>/.docker/config.json:/config.json
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      WATCHTOWER_CLEANUP: "true" # Delete old images
      WATCHTOWER_INCLUDE_STOPPED: "true" # Upgrade stopped containers too.
      DOCKER_HOST: tcp://socket-proxy:2375 # POST to be enabled on Socket Proxy
      #WATCHTOWER_POLL_INTERVAL: 60 # 86400 # Check for updates interval in seconds.
      #WATCHTOWER_TRACE: "true"

  # Docker-GC - Automatic Docker Garbage Collection
  # Create docker-gc-exclude file
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  dockergc:
    image: clockworksoul/docker-gc-cron:latest
    container_name: docker-gc
    restart: unless-stopped
    networks:
      - socket_proxy
    depends_on:
      - socket-proxy
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock # Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/docker-gc/docker-gc-exclude:/etc/docker-gc-exclude
    environment:
      CRON: 0 0 0 * * ? # Everyday at midnight. Previously 0 0 * * *
      FORCE_IMAGE_REMOVAL: 1
      FORCE_CONTAINER_REMOVAL: 0
      GRACE_PERIOD_SECONDS: 604800
      DRY_RUN: 0
      CLEAN_UP_VOLUMES: 1
      TZ: $TZ
      DOCKER_HOST: tcp://socket-proxy:2375
      
  # Portainer - WebUI for Containers
  # https://github.com/portainer/portainer-compose/blob/master/traefik/docker-compose.yml
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Portainer_with_Traefik_2_and_OAuth
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    # command: -H unix:///var/run/docker.sock # # Use Docker Socket Proxy instead for improved security
    # command: -H tcp://socket-proxy:2375 # appears to not work. Workaround was to create a new socket-proxy:2375 endpoint on portainer settings.
    # Create endpoint via Portainer UI -> Endpoints -> Add endpoint -> Docker `Environment Type`
    networks:
      - t2_proxy
      - socket_proxy
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
     # ports:
     # - "$PORTAINER_PORT:9000"
    volumes:
      #- /var/run/docker.sock:/var/run/docker.sock:ro # Use Docker Socket Proxy instead for improved security
      - $DOCKERDIR/portainer/data:/data 
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - "traefik.enable=true"
      ## Portainer
      ## HTTP Routers
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.${DOMAINNAME}`)"
      - "traefik.http.routers.portainer-secure.tls=true"
      ## Middlewares
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.portainer-secure.middlewares=chain-oauth@file" # Google OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.portainer-secure.service=portainer-svc"
      - "traefik.http.services.portainer-svc.loadbalancer.server.port=9000"
      ## Edge
      ## HTTP Routers
      - "traefik.http.routers.edge-secure.entrypoints=websecure"
      - "traefik.http.routers.edge-secure.rule=Host(`edge.${DOMAINNAME}`)"
      - "traefik.http.routers.edge-secure.tls=true"
      ## Middlewares
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file" # No Authentication
      # - "traefik.http.routers.portainer-rtr.middlewares=chain-basic-auth@file" # Basic Authentication
      - "traefik.http.routers.edge-secure.middlewares=chain-oauth@file" # Google OAuth 2.0
      ## HTTP Services
      - "traefik.http.routers.edge-secure.service=edge"
      - "traefik.http.services.edge.loadbalancer.server.port=8000"
  
  ################################ Media  

  # https://github.com/plexinc/pms-docker/blob/master/docker-compose-bridge.yml.template
  plex:
    image: plexinc/pms-docker:public
    container_name: plex
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports: # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
     - 32400:32400/tcp # Primary
     #- 3005:3005/tcp # Plex Home Theater Companion
     #- 8324:8324/tcp # Plex Roku Companion
     - 32469:32469/tcp # Plex DLNA Server
     - 1900:1900/udp # Plex DLNA Server
     - 32410:32410/udp # GDM network discovery
     - 32412:32412/udp # GDM network discovery
     - 32413:32413/udp # GDM network discovery
     - 32414:32414/udp # GDM network discovery
    environment:
      TZ: $TZ
      PLEX_CLAIM: ${PLEX_CLAIM_TOKEN}
      PLEX_UID: $PUID
      PLEX_GID: $PGID
      ADVERTISE_IP: http://192.168.1.254:32400/,https://plex.${DOMAINNAME}
    hostname: "PlexServer"
    volumes:
      - $DOCKERDIR/plex_config:/config
      - /mnt/user/appdata/tmp/plex_tmp:/transcode
      - /mnt/user/media:/data
    labels:
      - "traefik.enable=true" 
      ## Routers
      - "traefik.http.routers.plex-secure.rule=Host(`plex.${DOMAINNAME}`)"
      - "traefik.http.routers.plex-secure.entryPoints=websecure"
      - "traefik.http.routers.plex-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.plex-secure.middlewares=chain-no-auth@file"
      ## Services
      - "traefik.http.routers.plex-secure.service=plexms-svc"
      - "traefik.http.services.plexms-svc.loadbalancer.server.port=32400"

  # Calibre-web UI – Ebooks and Management (Plex of Ebooks)
  # Set up: https://www.atlantic.net/vps-hosting/how-to-install-calibre-web-on-ubuntu-20-04-with-docker/
  calibre-web:
    image: linuxserver/calibre-web
    container_name: calibre-web
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    #ports:
    #  - 8083:8083
    volumes:
      - $DOCKERDIR/calibre-web:/config
      - /mnt/user/media/Calibre:/books:rw
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      DOCKER_MODS: linuxserver/calibre-web:calibre # set the path to converter tool to /app/calibre/ebook-convert
      UMASK: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.calibre-web-secure.rule=Host(`calweb.$DOMAINNAME`)"
      - "traefik.http.routers.calibre-web-secure.entryPoints=websecure"
      - "traefik.http.routers.calibre-web-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.calibre-web-secure.middlewares=chain-oauth@file" 
      ## HTTP Services
      - "traefik.http.routers.calibre-web-secure.service=calibre-web-svc"
      - "traefik.http.services.calibre-web-svc.loadbalancer.server.port=8083"
      
  # Very simple Calibre UI
  cops:
    image: ghcr.io/linuxserver/cops
    container_name: cops
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    #ports:
    #  - 8085:80
    volumes:
      - $DOCKERDIR/cops/:/config
      - /mnt/user/media/Calibre:/books
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.cops-secure.rule=Host(`cops.$DOMAINNAME`)"
      - "traefik.http.routers.cops-secure.entryPoints=websecure"
      - "traefik.http.routers.cops-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.cops-secure.middlewares=chain-oauth@file" 
      ## HTTP Services
      - "traefik.http.routers.cops-secure.service=cops-svc"
      - "traefik.http.services.cops-svc.loadbalancer.server.port=80"

  # Calibre  – Ebooks and Management (Server)
  calibre:
    image: linuxserver/calibre
    container_name: calibre
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
    #  - "9082:8080" # Desktop GUI
      - "9081:8081" # Webserver GUI and Calibre content server
    volumes:
      - $DOCKERDIR/calibre:/config:rw
      - /mnt/user/media/Calibre:/config/Calibre Library:rw
      - /mnt/user/downloads/complete:/downloads:rw
      - /mnt/user/media/Books:/books:rw
      - /mnt/user/media/Audiobooks:/audiobooks:rw
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      # GUAC_USER: abc #Gucamole user optional
      # GUAC_PASS: 900150983cd24fb0d6963f7d28e17f72 #Guacamole password optional
      UMASK_SET: 002 #optional
      # CLI_ARGS: #optional
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.calibre-secure.rule=Host(`calibre.$DOMAINNAME`)"
      - "traefik.http.routers.calibre-secure.entryPoints=websecure"
      - "traefik.http.routers.calibre-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.calibre-secure.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.calibre-secure.service=calibre-svc"
      - "traefik.http.services.calibre-svc.loadbalancer.server.port=8080"

  
  ################################ Downloads
  
  # Run all Transmission traffic through VPN Unlimited
  # https://github.com/haugene/docker-transmission-openvpn   
  # https://www.smarthomebeginner.com/docker-home-media-server-2018-basic/#Transmission_with_VPN_-_Bittorrent_Downloader
  transmission-vpn:
    image: haugene/transmission-openvpn
    container_name: transmission-vpn
    restart: always
    networks:
      # - t2_proxy
      t2_proxy:
        ipv4_address: 192.168.90.90
    # security_opt:
    #   - no-new-privileges:true
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    ports:
    - "9091:9091"
    dns:
      - 1.1.1.1
      - 1.0.0.1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # OpenVPN config generated with https://www.vpnunlimitedapp.com/help/manuals/how-to-manually-create-vpn-conf
      #- $DOCKERDIR/transmission-vpn/vpnunlimited-openvpn:/etc/openvpn/custom:ro
      #- $DOCKERDIR/transmission-vpn/vpnunlimited-openvpn/us-sf.ovpn:/etc/openvpn/custom/default.ovpn:ro
      - /mnt/user/downloads:/data
      - $DOCKERDIR/transmission-vpn/config:/config
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      OPENVPN_PROVIDER: VPNUNLIMITED
      #OPENVPN_PROVIDER: CUSTOM
      OPENVPN_USERNAME: $VPN_UNLIMITED_USERNAME
      OPENVPN_PASSWORD: $VPN_UNLIMITED_PASSWORD
      OPENVPN_CONFIG: us-sf,ca-tr,fr,lu,ro  # Corresponds to a file name in https://github.com/haugene/docker-transmission-openvpn/tree/master/openvpn/vpnunlimited or $DOCKERDIR/transmission-vpn/vpnunlimited-openvpn
      OPENVPN_OPTS: "--inactive 3600 --ping 10 --ping-exit 60"
      LOCAL_NETWORK: 192.168.1.0/24
      TRANSMISSION_RPC_AUTHENTICATION_REQUIRED: "true"
      # TODO Disabled until http://haugene.github.io/docker-transmission-openvpn/vpn-networking/#how_to_fix_this proxy is in this container (or we add a proxy container)
      #TRANSMISSION_RPC_HOST_WHITELIST: 127.0.0.1,192.168.1.*
      TRANSMISSION_RPC_PASSWORD: $TRANSMISSION_WEBUI_PASSWORD
      TRANSMISSION_RPC_USERNAME: $TRANSMISSION_WEBUI_USERNAME
      TRANSMISSION_UMASK: 002
      TRANSMISSION_SPEED_LIMIT_UP: 225 #KB/s
      TRANSMISSION_SPEED_LIMIT_UP_ENABLED: "true"
      #TRANSMISSION_RATIO_LIMIT=2.00
      #TRANSMISSION_RATIO_LIMIT_ENABLED=false
      
  # SABnzbd - Binary newsgrabber (NZB downloader)
  # Disable SABNnzbd's built-in HTTPS support for traefik proxy to work
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  # To access from sabnzbd.$DOMAINNAME, sabnzbd.ini (created after first launch) needs to be edited.
  # Replace host_whitelist with a comma separated list of allowed host names, for example "sabnzbd.$DOMAINNAME, sabnzbd".
  sabnzbd:
    image: linuxserver/sabnzbd:latest
    container_name: sabnzbd
    hostname: sabnzbd
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "9089:8080"
    volumes:
      - $DOCKERDIR/sabnzbd:/config
      - /mnt/user/downloads:/config/Downloads
      - /mnt/user/downloads/watch:/watch # optional
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      UMASK_SET: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      #- "traefik.http.routers.sabnzbd-rtr-bypass.entrypoints=websecure"
      #- "traefik.http.routers.sabnzbd-rtr-bypass.rule=Query(`apikey`, `$SABNZBD_API_KEY`)"
      #- "traefik.http.routers.sabnzbd-rtr-bypass.priority=100"
      #- "traefik.http.routers.sabnzbd-rtr-bypass.tls=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.sabnzbd-rtr.entrypoints=websecure"
      - "traefik.http.routers.sabnzbd-rtr.rule=HostHeader(`sabnzbd.$DOMAINNAME`)"
      - "traefik.http.routers.sabnzbd-rtr.priority=99"
      - "traefik.http.routers.sabnzbd-rtr.tls=true"
      ## Middlewares
      #- "traefik.http.routers.sabnzbd-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sabnzbd-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sabnzbd-rtr.service=sabnzbd-svc"
      #- "traefik.http.routers.sabnzbd-rtr-bypass.service=sabnzbd-svc"
      - "traefik.http.services.sabnzbd-svc.loadbalancer.server.port=8080"

  ################################ Indexers

  # NZBHydra2 - NZB meta search
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  hydra:
    image: linuxserver/nzbhydra2:latest
    container_name: hydra
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "5076:5076"
    volumes:
      - $DOCKERDIR/hydra2:/config
      - /mnt/user/downloads:/downloads
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.hydra-rtr.entrypoints=websecure"
      - "traefik.http.routers.hydra-rtr.rule=Host(`hydra.$DOMAINNAME`)"
      - "traefik.http.routers.hydra-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.hydra-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.hydra-rtr.service=hydra-svc"
      - "traefik.http.services.hydra-svc.loadbalancer.server.port=5076"


  ################################ Managers
  
  # Radarr - Movie management
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  radarr:
    # image: aront/radarr #for mp4_automator support
    image: linuxserver/radarr:nightly
    container_name: radarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "7878:7878"
    volumes:
      - $DOCKERDIR/radarr:/config
      - /mnt/user/downloads/movies:/config/Downloads/movies  # Needs to match path reported by SABNnzbd.
      - /mnt/user/media/Movies:/movies
      # - $DOCKERDIR/shared/mp4_automator:/config_mp4_automator
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      #- "traefik.http.routers.radarr-rtr-bypass.entrypoints=https"
      #- "traefik.http.routers.radarr-rtr-bypass.rule=Host(`radarr.$DOMAINNAME`) && (Headers(`X-Api-Key`, `$RADARR_API_KEY`) || Query(`apikey`, `$RADARR_API_KEY`))"
      #- "traefik.http.routers.radarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.radarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.radarr-rtr.rule=Host(`radarr.$DOMAINNAME`)"
      - "traefik.http.routers.radarr-rtr.priority=99"
      - "traefik.http.routers.radarr-rtr.tls=true"
      ## Middlewares
      #- "traefik.http.routers.radarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.radarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.radarr-rtr.service=radarr-svc"
      #- "traefik.http.routers.radarr-rtr-bypass.service=radarr-svc"
      - "traefik.http.services.radarr-svc.loadbalancer.server.port=7878"
      
  # Bazarr - Subtitle Management
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
     - "6767:6767"
    volumes:
      - $DOCKERDIR/bazarr:/config
      - /mnt/user/media/Movies:/movies
      - /mnt/user/media/TV:/tv
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.bazarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.bazarr-rtr.rule=Host(`bazarr.$DOMAINNAME`)"
      - "traefik.http.routers.bazarr-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.bazarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.bazarr-rtr.service=bazarr-svc"
      - "traefik.http.services.bazarr-svc.loadbalancer.server.port=6767"
  
  # Sonarr - TV Shows management
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  # https://github.com/CVJoint/traefik2/blob/master/ymlfiles/sonarr.yml
  sonarr:
    # image: aront/sonarr  #for mp4_automator support
    image: linuxserver/sonarr:latest #preview
    container_name: sonarr
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    ports:
      - "8989:8989"
    volumes:
      - $DOCKERDIR/sonarr:/config
      - /mnt/user/downloads/tv:/config/Downloads/tv  # Needs to match path reported by SABNnzbd.
      - /mnt/user/media/TV:/tv
      - /etc/localtime:/etc/localtime:ro
    #   - "$DOCKERDIR/shared/mp4_automator:/config_mp4_automator:rw"
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002 #optional
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth Bypass
      #- "traefik.http.routers.sonarr-rtr-bypass.entrypoints=https"
      #- "traefik.http.routers.sonarr-rtr-bypass.rule=Host(`sonarr.$DOMAINNAME`) && (Headers(`X-Api-Key`, `$SONARR_API_KEY`) || Query(`apikey`, `$SONARR_API_KEY`))"
      #- "traefik.http.routers.sonarr-rtr-bypass.priority=100"
      ## HTTP Routers Auth
      - "traefik.http.routers.sonarr-rtr.entrypoints=websecure"
      - "traefik.http.routers.sonarr-rtr.rule=Host(`sonarr.$DOMAINNAME`)"
      - "traefik.http.routers.sonarr-rtr.priority=99"
      - "traefik.http.routers.sonarr-rtr.tls=true"
      ## Middlewares
      #- "traefik.http.routers.sonarr-rtr-bypass.middlewares=chain-no-auth@file"
      - "traefik.http.routers.sonarr-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.sonarr-rtr.service=sonarr-svc"
      #- "traefik.http.routers.sonarr-rtr-bypass.service=sonarr-svc"
      - "traefik.http.services.sonarr-svc.loadbalancer.server.port=8989"
  
  # Lazylibrarian  – Ebooks and Management
  # https://github.com/htpcBeginner/docker-traefik/blob/master/docker-compose-t2.yml
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    restart: unless-stopped
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    #ports:
    # - "5299:5299"
    volumes:
      - $DOCKERDIR/lazylibrarian:/config
      - /mnt/user/downloads/complete:/config/Downloads/complete
      - /mnt/user/media/Calibre:/books:rw
      - /mnt/user/media/Audiobooks:/audiobooks:rw
      - /etc/localtime:/etc/localtime:ro
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      # Set the path to ebook converter tool to /app/calibre/ebook-convert and ffmpeg to ffmpeg (/usr/bin/ffmpeg)
      DOCKER_MODS: linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg
    labels:
      - "traefik.enable=true"
      ## HTTP Routers Auth
      - "traefik.http.routers.lazylibrarian-rtr.entrypoints=websecure"
      - "traefik.http.routers.lazylibrarian-rtr.rule=Host(`lazy.$DOMAINNAME`)"
      - "traefik.http.routers.lazylibrarian-rtr.tls=true"
      ## Middlewares
      - "traefik.http.routers.lazylibrarian-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.lazylibrarian-rtr.service=lazylibrarian-svc"
      - "traefik.http.services.lazylibrarian-svc.loadbalancer.server.port=5299"

  
  ################################ TODO: Work in Progress
  
  # https://github.com/shawly/docker-ps3netsrv
  ps3netsrv:
    image: shawly/ps3netsrv
    container_name: ps3netsrv
    environment:
      TZ: $TZ
      USER_ID: $PUID
      GROUP_ID: $PGID
    ports:
      - "38008:38008"
    volumes:
      - "/mnt/user/games/PS3Games:/games:rw"
  
  # Organizr - Unified frontent with a directory for all ports and services
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Organizr_-_Unified_HTPCHome_Server_Web_Interface
  organizr:
     container_name: organizr
     image: organizr/organizr:latest
     restart: always
     networks:
       - t2_proxy
     security_opt:
       - no-new-privileges:true
    # ports:
    #  - "$ORGANIZR_PORT:80"
     volumes:
       - $DOCKERDIR/organizr:/config
     environment:
       TZ: $TZ
       PUID: $PUID
       PGID: $PGID
     labels:
       - "traefik.enable=true"
       ## HTTP Routers
       - "traefik.http.routers.organizr-secure.entrypoints=websecure"
       - "traefik.http.routers.organizr-secure.rule=Host(`${DOMAINNAME}`,`www.${DOMAINNAME}`)" 
       - "traefik.http.routers.organizr-secure.tls=true"
       ## Middlewares
       - "traefik.http.routers.organizr-rtr.middlewares=chain-oauth@file" 
       ## HTTP Services
       - "traefik.http.routers.organizr-secure.service=organizr-svc"
       - "traefik.http.services.organizr-svc.loadbalancer.server.port=80"
      
  # MariaDB - MySQL Database
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#MariaDB_-_MySQL_Database
  mariadb:
     container_name: mariadb
     image: linuxserver/mariadb:latest
     restart: always
     networks:
       t2_proxy:
         ipv4_address: 192.168.90.250 
     security_opt:
       - no-new-privileges:true
     ports:
       - "3306:3306"
     volumes:
       - $DOCKERDIR/mariadb/data:/config
       # TODO
      # - /etc/timezone:/etc/timezone:ro
       - /etc/localtime:/etc/localtime:ro
     environment:
       TZ: $TZ
       PUID: $PUID
       PGID: $PGID
       MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD

  # Guacamole - Remote desktop, SSH, on Telnet on any HTML5 Browser 
  # https://www.smarthomebeginner.com/traefik-2-docker-tutorial/#Guacamole_-_HTML_5_based_Remote_desktop_SSH_on_Telnet_Gateway
  # TODO DB setup
  guacamole:
    image: guacamole/guacamole:latest
    container_name: guacamole
    restart: always
    networks:
      - t2_proxy
    security_opt:
      - no-new-privileges:true
    #ports:
    #  - "$GUACAMOLE_PORT:8080"
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
      GUACD_HOSTNAME: guacd
      MYSQL_HOSTNAME: 192.168.90.250 
      MYSQL_PORT: 3306
      MYSQL_DATABASE: guacamole
      MYSQL_USER: $GUAC_MYSQL_USER
      MYSQL_PASSWORD: $GUAC_MYSQL_PASSWORD #TODO
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.guacamole-secure.entrypoints=websecure"
      - "traefik.http.routers.guacamole-secure.rule=Host(`guac.${DOMAINNAME}`)"
      - "traefik.http.routers.guacamole-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.guacamole-secure.middlewares=chain-oauth@file,add-guacamole" 
      - "traefik.http.middlewares.add-guacamole.addPrefix.prefix=/guacamole"
      ## HTTP Services
      - "traefik.http.routers.guacamole-secure.service=guacamole-svc"
      - "traefik.http.services.guacamole-svc.loadbalancer.server.port=8080"

  # Guacamole Daemon - Needed for Guacamole
  guacd:
    image: guacamole/guacd
    container_name: guacd
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    #ports:
    # - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - $DOCKERDIR/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
    networks:
      - t2_proxy
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - "traefik.enable=true" 
      ## Routers
      - "traefik.http.routers.prometheus-secure.rule=Host(`prometheus.${DOMAINNAME}`)"
      - "traefik.http.routers.prometheus-secure.entryPoints=websecure"
      - "traefik.http.routers.prometheus-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.prometheus-secure.middlewares=chain-oauth@file"
      ## Services
      - "traefik.http.routers.prometheus-secure.service=prometheus-svc"
      - "traefik.http.services.prometheus-svc.loadbalancer.server.port=9090"
      
  # https://prometheus.io/docs/guides/cadvisor/#docker-compose-configuration
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    restart: always
    #ports:
     #-8316:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis
    devices:
      # Add all devices producing error logs from docker-compose logs cadvisor.
      - /dev/kmsg
      - /dev/loop2
      - /dev/loop3
      # TODO
      #- /dev//mapper/sdc1
    #privileged: true
    networks:
      - t2_proxy
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID
    labels:
      - "traefik.enable=true" 
      ## Routers
      - "traefik.http.routers.cadvisor-secure.rule=Host(`cadvisor.${DOMAINNAME}`)"
      - "traefik.http.routers.cadvisor-secure.entryPoints=websecure"
      - "traefik.http.routers.cadvisor-secure.tls=true"
      ## Middlewares
      - "traefik.http.routers.cadvisor-secure.middlewares=chain-oauth@file"
      ## Services
      - "traefik.http.routers.cadvisor-secure.service=cadvisor-svc"
      - "traefik.http.services.cadvisor-svc.loadbalancer.server.port=8080"

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    environment:
      TZ: $TZ
      PUID: $PUID
      PGID: $PGID

volumes:
  letsencrypt:
    # Intentionally blank. Traefik will add an acme.json certificate inside this volume.
    # We are not using a file in the shared vagrant directory because all files in the vagrant share have 777 permissions and letsencrypt/Traefik require 600.

networks:
  # Traefik 2 proxy.
  t2_proxy:
    name: t2_proxy
    ipam:
      config:
       - subnet: 192.168.90.0/24
       # gateway is only honored for v2 (for now): https://github.com/docker/compose/issues/6569 and https://docs.docker.com/compose/compose-file/#ipam
       #gateway: 192.168.90.1
  # Docker socket proxy.
  # https://www.smarthomebeginner.com/traefik-docker-security-best-practices/#9_Use_a_Docker_Socket_Proxy
  socket_proxy:
    name: socket_proxy
    ipam:
      config:
       - subnet: 192.168.91.0/24
       # gateway is only honored for v2 (for now): https://github.com/docker/compose/issues/6569 and https://docs.docker.com/compose/compose-file/#ipam
       #gateway: 192.168.91.1
